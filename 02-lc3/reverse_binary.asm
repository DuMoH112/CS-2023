; В R0 - Используется для вывода символа 
; В R1 - Хранится исходное число (константа NUM)
; В R2 - Хранится ASCII символ 0 (константа ZERO)
; В R3 - Хранится целый результат при делении на 2

.ORIG x3000 ; начальный адрес

    ; Загрузить константы в регистры
    LD R1, NUM          ; Загружаем NUM в R1
    LD R2, ZERO         ; Загружаем ZERO в R2

    ADD R3, R3, #0      ; Обнуляем регистр R3

    ; Начало цикла
    LOOP
        ; Делить число в регистре R1 на 2 с остатком
        ADD R1, R1, #-2 ; R1 = R1 - 2
        BRn NEGATIVE    ; Если результат отрицателен, перейти к NEGATIVE
        ADD R3, R3, #1  ; Иначе увеличить результат деления на 1
        BR LOOP         ; Перейти к началу цикла

    ; Обработка отрицательного результата
    NEGATIVE            ; Восстановить последнюю цифру и преобразовать ее в символ
        ADD R0, R1, #2  ; R0 = R1 + 2 | На выходе будет 0 или 1
        ADD R0, R0, R2  ; R0 = R0 + ASCII 
        OUT             ; Вывести символ на экран 

        ADD R1, R3, #0  ; Скопировать результат деления в регистр R1
        BRz TO_END      ; Если он равен нулю, то завершаем программу
        AND R3, R3, #0  ; Иначе обнулить счетчик цифр
        BR LOOP         ; Перейти к началу цикла

    TO_END
        HALT

    NUM .FILL b10001001 ; исходное число
    ZERO .FILL x0030    ; Символ '0' в ASCII-коде

.END
